package kauppa.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import kauppa.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.04.07 15:10:08 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class TuoteTest {


  // Generated by ComTest BEGIN
  /** testRekisteroi278 */
  @Test
  public void testRekisteroi278() {    // Tuote: 278
    Tuote tuote1 = new Tuote(); 
    assertEquals("From: Tuote line: 280", 0, tuote1.getTuotenro()); 
    tuote1.rekisteroi(); 
    Tuote tuote2 = new Tuote(); 
    tuote2.rekisteroi(); 
    int n1 = tuote1.getTuotenro(); 
    int n2 = tuote2.getTuotenro(); 
    n1 = n2-1; 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testToString404 */
  @Test
  public void testToString404() {    // Tuote: 404
    Tuote tuote = new Tuote(); 
    tuote.parse("10|Testituote192|0.50|46|3"); 
    assertEquals("From: Tuote line: 407", true, tuote.toString().startsWith("10|Testituote192|0.50|"));  // on enemmänkin kuin 3 kenttää, siksi loppu |
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testParse425 */
  @Test
  public void testParse425() {    // Tuote: 425
    Tuote tuote = new Tuote(); 
    tuote.parse("10|Testituote192|0.50|46|3"); 
    assertEquals("From: Tuote line: 428", 10, tuote.getTuotenro()); 
    assertEquals("From: Tuote line: 429", true, tuote.toString().startsWith("10|Testituote192|0.50|")); 
    tuote.rekisteroi(); 
    int n = tuote.getTuotenro(); 
    tuote.parse(""+(n+20)); 
    tuote.rekisteroi();  // ja tarkistetaan että seuraavalla kertaa tulee yhtä isompi
    assertEquals("From: Tuote line: 434", n+20+1, tuote.getTuotenro()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testClone449 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testClone449() throws CloneNotSupportedException {    // Tuote: 449
    Tuote tuote = new Tuote(); 
    tuote.parse("10|Testituote192|0.50|46|3"); 
    Tuote kopio = tuote.clone(); 
    assertEquals("From: Tuote line: 454", tuote.toString(), kopio.toString()); 
    tuote.parse("10|Testituote192|0.50|46|3"); 
    assertEquals("From: Tuote line: 456", true, kopio.toString().equals(tuote.toString())); 
  } // Generated by ComTest END
}